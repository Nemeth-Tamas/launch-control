{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","station","time","username","password","server","auth","error","handleClick","e","setState","target","innerHTML","handleAuthChange","handleTimeChange","value","handleUsernameChange","handlePasswordChange","handleServerChange","handleSubmit","preventDefault","requestOptions","method","mode","headers","body","JSON","stringify","launchtime","launchdevice","authorized","fetch","then","res","json","data","launched","catch","err","className","style","alignItems","this","Dropdown","Toggle","variant","id","Menu","Item","eventKey","active","onClick","Divider","Card","Body","Title","Text","onSubmit","type","name","required","autoComplete","placeholder","onChange","htmlFor","class","checked","for","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.980f7487.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown, Card } from \"react-bootstrap\";\n\nclass App extends Component {\n  state = {\n    station: 1,\n    time: \"\",\n    username: \"\",\n    password: \"\",\n    server: \"\",\n    auth: false,\n    error: \"\",\n  };\n  handleClick = (e) => {\n    this.setState({\n      station: e.target.innerHTML,\n    });\n  };\n  handleAuthChange = () => {\n    this.setState({\n      auth: !this.state.auth,\n    });\n  };\n  handleTimeChange = (e) => {\n    this.setState({\n      time: e.target.value,\n    });\n  };\n  handleUsernameChange = (e) => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n  handlePasswordChange = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n  handleServerChange = (e) => {\n    this.setState({\n      server: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let requestOptions = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n        launchtime: this.state.time,\n        launchdevice: this.state.station,\n        authorized: this.state.auth,\n      }),\n    };\n    fetch(`http://${this.state.server}:3000/launch`, requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n          auth: false,\n          time: \"\",\n          station: 1,\n        });\n        if (data.launched === \"failed\") {\n          this.setState({\n            error: data.error,\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          error: `${this.state.server} nem található`,\n        });\n      });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-3 col-sm-12\"></div>\n              <div\n                className=\"col-md-6 col-sm-12 d-flex flex-column\"\n                style={{ alignItems: \"center\" }}\n              >\n                <h1 className=\"mb-5 text-danger\">Kilövő állomás</h1>\n                {this.state.error !== \"\" ? (\n                  <h1 className=\"text-warning\">{this.state.error}</h1>\n                ) : (\n                  \"\"\n                )}\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\n                    Kilövő állomás\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      eventKey=\"1\"\n                      active={this.state.station == 1}\n                      onClick={this.handleClick}\n                      value=\"1\"\n                    >\n                      1\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      eventKey=\"2\"\n                      active={this.state.station == 2}\n                      onClick={this.handleClick}\n                      value=\"2\"\n                    >\n                      2\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      eventKey=\"3\"\n                      active={this.state.station == 3}\n                      onClick={this.handleClick}\n                      value=\"3\"\n                    >\n                      3\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      eventKey=\"4\"\n                      active={this.state.station == 4}\n                      onClick={this.handleClick}\n                      value=\"4\"\n                    >\n                      4\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <Card className=\"mt-4\">\n                  <Card.Body>\n                    <Card.Title>\n                      <h2>Felhasználói azonosítás</h2>\n                    </Card.Title>\n                    <Card.Text>\n                      <form onSubmit={this.handleSubmit}>\n                        <input\n                          type=\"text\"\n                          name=\"server\"\n                          id=\"server\"\n                          required\n                          autoComplete=\"off\"\n                          placeholder=\"Szerver\"\n                          value={this.state.server}\n                          onChange={this.handleServerChange}\n                          className=\"form-control bg-dark text-white mb-1\"\n                        />\n                        <input\n                          type=\"text\"\n                          name=\"time\"\n                          id=\"time\"\n                          required\n                          autoComplete=\"off\"\n                          placeholder=\"Idő\"\n                          value={this.state.time}\n                          onChange={this.handleTimeChange}\n                          className=\"form-control bg-light mb-1\"\n                        />\n                        <input\n                          type=\"text\"\n                          name=\"username\"\n                          id=\"username\"\n                          required\n                          autoComplete=\"off\"\n                          placeholder=\"Felhasználónév\"\n                          value={this.state.username}\n                          onChange={this.handleUsernameChange}\n                          className=\"form-control bg-light mb-1\"\n                        />\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"password\"\n                          required\n                          autoComplete=\"off\"\n                          placeholder=\"Jelszó\"\n                          value={this.state.password}\n                          onChange={this.handlePasswordChange}\n                          className=\"form-control bg-light mb-1\"\n                        />\n                        <label htmlFor=\"auth\" className=\"mr-2\">\n                          Engedélyezés\n                        </label>\n                        <div class=\"custom-control custom-switch\">\n                          <input\n                            type=\"checkbox\"\n                            class=\"custom-control-input\"\n                            id=\"customSwitch1\"\n                            checked={this.state.auth}\n                            onClick={this.handleAuthChange}\n                            name=\"auth\"\n                          />\n                          <label\n                            class=\"custom-control-label\"\n                            for=\"customSwitch1\"\n                          >\n                            Toggle this switch element\n                          </label>\n                        </div>\n                        <br></br>\n                        <input\n                          type=\"submit\"\n                          value=\"Kilövés\"\n                          className=\"btn btn-outline-danger\"\n                        />\n                      </form>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </div>\n              <div className=\"col-md-3 col-sm-12\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}